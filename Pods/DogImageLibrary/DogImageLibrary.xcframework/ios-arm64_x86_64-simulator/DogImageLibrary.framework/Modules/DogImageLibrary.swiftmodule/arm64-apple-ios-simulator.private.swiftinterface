// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios17.5-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name DogImageLibrary
import CoreData
@_exported import DogImageLibrary
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public protocol DogImageDelegate {
  func showHideloader(_ loading: Swift.Bool)
  func didRecieveError(msg: Swift.String)
}
public class DogImageFetcher {
  public var delegate: (any DogImageLibrary.DogImageDelegate)?
  public init()
  public func getImage(completion: @escaping (UIKit.UIImage?) -> Swift.Void)
  public func getNextImage(completion: @escaping (UIKit.UIImage) -> Swift.Void)
  public func getPreviousImage() -> (image: UIKit.UIImage?, isEnable: Swift.Bool)
  public func getImage(number: Swift.Int, completion: @escaping ([UIKit.UIImage?]?) -> Swift.Void)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(DogImageEntity) public class DogImageEntity : CoreData.NSManagedObject {
  @objc override dynamic public init(entity: CoreData.NSEntityDescription, insertInto context: CoreData.NSManagedObjectContext?)
  @objc deinit
}
extension DogImageLibrary.DogImageEntity {
  @nonobjc public class func fetchRequest() -> CoreData.NSFetchRequest<DogImageLibrary.DogImageEntity>
  @objc @NSManaged dynamic public var dogImage: Foundation.Data? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var id: Foundation.UUID? {
    @objc get
    @objc set
  }
}
extension DogImageLibrary.DogImageEntity : Swift.Identifiable {
  public typealias ID = Foundation.UUID?
}
